<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mijazzchan.github.io/</id><title>Mijazz Chan</title><subtitle>A personal tech blog website created and maintained by Mijazz Chan.</subtitle> <updated>2022-08-14T20:22:16+08:00</updated> <author> <name>Mijazz Chan</name> <uri>https://mijazzchan.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://mijazzchan.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://mijazzchan.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Mijazz Chan </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Documentation for cloudflare-ddns-edgeos</title><link href="https://mijazzchan.github.io/posts/Documentation-for-cloudflare-ddns-edgeos/" rel="alternate" type="text/html" title="Documentation for cloudflare-ddns-edgeos" /><published>2022-03-02T16:32:09+08:00</published> <updated>2022-03-03T14:24:56+08:00</updated> <id>https://mijazzchan.github.io/posts/Documentation-for-cloudflare-ddns-edgeos/</id> <content src="https://mijazzchan.github.io/posts/Documentation-for-cloudflare-ddns-edgeos/" /> <author> <name>Mijazz Chan</name> </author> <category term="Linux" /> <category term="Management" /> <summary> About this project Inspired by rehiy/dnspod-shell, I wrote this project. At the beginning, this is just a random script I wrote and configured it on my router with crontab, all because of my sudden switch of dns provider. There’re plenty of ddns(ddns-client) projects on Github. Some of them are written in shell-script and don’t require extra language or framework support. (I do... </summary> </entry> <entry><title>Clean Pacman/Yay Package Cache on Manjaro or Arch-based Distros (Automation/Manual)</title><link href="https://mijazzchan.github.io/posts/clean-pacman-yay-package-cache-on-manjaro-automation-manual/" rel="alternate" type="text/html" title="Clean Pacman/Yay Package Cache on Manjaro or Arch-based Distros (Automation/Manual)" /><published>2022-01-09T12:36:23+08:00</published> <updated>2022-01-09T12:36:23+08:00</updated> <id>https://mijazzchan.github.io/posts/clean-pacman-yay-package-cache-on-manjaro-automation-manual/</id> <content src="https://mijazzchan.github.io/posts/clean-pacman-yay-package-cache-on-manjaro-automation-manual/" /> <author> <name>Mijazz Chan</name> </author> <category term="Linux" /> <category term="Management" /> <summary> Intro After several months of using Manjaro Linux(Arch Based Distro), I feel like getting attracted to its package manager pacman and its Rolling Release pattern. Most of the time, Arch has vanilla packages (not as heavily modified as the Ubuntu/Debian based distros) that you can directly compile or install by just using pacman. It really save the day when you don’t have to worry about some O... </summary> </entry> <entry><title>Functional Interface and its Underlying Pattern - Effective Java reading notes</title><link href="https://mijazzchan.github.io/posts/Functional-Interface-and-its-Underlying-Pattern/" rel="alternate" type="text/html" title="Functional Interface and its Underlying Pattern - Effective Java reading notes" /><published>2021-06-15T20:47:41+08:00</published> <updated>2022-01-11T07:45:22+08:00</updated> <id>https://mijazzchan.github.io/posts/Functional-Interface-and-its-Underlying-Pattern/</id> <content src="https://mijazzchan.github.io/posts/Functional-Interface-and-its-Underlying-Pattern/" /> <author> <name>MijazzChan</name> </author> <category term="Java" /> <category term="Design" /> <summary> Just like I said in this post, These patterns are pretty easy/simple, but it really helps me a lot especially when managing to understanding Java’s underlying design pattern through reading Java source code. Following these patterns also helps producing code which is developer-friendly. Keyword: Functional Interface, Map::computeIfPresent, PECS mnemonic, Consumer, Predicate, Supplier, Bina... </summary> </entry> <entry><title>Notes of PECS Mnemonic, Bounded wildcard type - Effective Java reading notes</title><link href="https://mijazzchan.github.io/posts/PECS-Mnemonic-Bounded-wildcard-Type-Effective-Java-reading-notes/" rel="alternate" type="text/html" title="Notes of PECS Mnemonic, Bounded wildcard type - Effective Java reading notes" /><published>2021-06-10T20:37:19+08:00</published> <updated>2022-01-11T07:45:22+08:00</updated> <id>https://mijazzchan.github.io/posts/PECS-Mnemonic-Bounded-wildcard-Type-Effective-Java-reading-notes/</id> <content src="https://mijazzchan.github.io/posts/PECS-Mnemonic-Bounded-wildcard-Type-Effective-Java-reading-notes/" /> <author> <name>MijazzChan</name> </author> <category term="Java" /> <category term="Design" /> <summary> Intro PECS stands for Producer extend Consumer super. The PECS mnemonic captures the fundamental principle that guides the use of wildcard types. Although the way it works may seem a little bit confusing. An answer from Stack Overflow by Julien perfectly illustrate how that actually affects the way of adding object to List and List assigning. Bounded Wildcard Type with super and extends Sup... </summary> </entry> <entry><title>Some Neat Design Patterns - Effective Java reading notes</title><link href="https://mijazzchan.github.io/posts/Some-Neat-Design-Patterns-Effective-Java-reading-notes/" rel="alternate" type="text/html" title="Some Neat Design Patterns - Effective Java reading notes" /><published>2021-06-10T00:22:19+08:00</published> <updated>2022-01-11T07:45:22+08:00</updated> <id>https://mijazzchan.github.io/posts/Some-Neat-Design-Patterns-Effective-Java-reading-notes/</id> <content src="https://mijazzchan.github.io/posts/Some-Neat-Design-Patterns-Effective-Java-reading-notes/" /> <author> <name>MijazzChan</name> </author> <category term="Java" /> <category term="Design" /> <summary> Builder Pattern Simple Builder Pattern without considering Hierarchy Generic Type Builder Pattern (suits to class hierarchies) Singleton property Non-instantiability while dealing with Utility Class These patterns are pretty easy/simple, but it really helps me a lot especially when managing to understandi... </summary> </entry> </feed>
